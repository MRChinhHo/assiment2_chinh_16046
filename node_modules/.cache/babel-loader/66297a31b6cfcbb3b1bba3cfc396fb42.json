{"ast":null,"code":"var _jsxFileName = \"E:\\\\javascript\\\\Assignment02\\\\src\\\\hooks\\\\Trailer.js\";\nimport React, { useEffect, useState } from \"react\";\nimport YouTube from \"react-youtube\";\nconst Trailer = props => {\n  console.log(props);\n  // const [status, setStatus] = useState(false);\n  // const [getVideo, setGetVideo] = useState(\"\");\n\n  // const test = async () => {\n  //   console.log(props.inf.item.id);\n  //   console.log(props.inf.item.backdrop_path);\n\n  //   const response = await fetch(\n  //     `https://api.themoviedb.org/3//movie/${props.inf.item.id}/videos?api_key=f847f42a3e8a3a8f665ef014755a6ca3`\n  //   );\n  //   const data = await response.json();\n\n  //   console.log(data);\n\n  //   let arrayFilter = data?.results?.filter((e) => {\n  //     return (\n  //       e.site === \"YouTube\" && (e.type === \"Trailer\" || e.type === \"Teaser\")\n  //     );\n  //   });\n\n  //   console.log(arrayFilter);\n\n  //   if (arrayFilter?.length === 0) {\n  //     setStatus(false);\n  //   } else {\n  //     setGetVideo(arrayFilter[0]);\n  //     console.log(arrayFilter);\n  //     setStatus(true);\n  //   }\n  // };\n\n  // useEffect(() => {\n  //   test();\n  // }, [props]);\n\n  // console.log(getVideo);\n  // const opts = {\n  //   height: \"400\",\n  //   width: \"100%\",\n  //   playerVars: {\n  //     autoplay: 0,\n  //   },\n  // };\n  // console.log(props.inf.id);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, \"aa\");\n};\nexport default Trailer;","map":{"version":3,"names":["React","useEffect","useState","YouTube","Trailer","props","console","log"],"sources":["E:/javascript/Assignment02/src/hooks/Trailer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nconst Trailer = (props) => {\r\n  console.log(props);\r\n  // const [status, setStatus] = useState(false);\r\n  // const [getVideo, setGetVideo] = useState(\"\");\r\n\r\n  // const test = async () => {\r\n  //   console.log(props.inf.item.id);\r\n  //   console.log(props.inf.item.backdrop_path);\r\n\r\n  //   const response = await fetch(\r\n  //     `https://api.themoviedb.org/3//movie/${props.inf.item.id}/videos?api_key=f847f42a3e8a3a8f665ef014755a6ca3`\r\n  //   );\r\n  //   const data = await response.json();\r\n\r\n  //   console.log(data);\r\n\r\n  //   let arrayFilter = data?.results?.filter((e) => {\r\n  //     return (\r\n  //       e.site === \"YouTube\" && (e.type === \"Trailer\" || e.type === \"Teaser\")\r\n  //     );\r\n  //   });\r\n\r\n  //   console.log(arrayFilter);\r\n\r\n  //   if (arrayFilter?.length === 0) {\r\n  //     setStatus(false);\r\n  //   } else {\r\n  //     setGetVideo(arrayFilter[0]);\r\n  //     console.log(arrayFilter);\r\n  //     setStatus(true);\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   test();\r\n  // }, [props]);\r\n\r\n  // console.log(getVideo);\r\n  // const opts = {\r\n  //   height: \"400\",\r\n  //   width: \"100%\",\r\n  //   playerVars: {\r\n  //     autoplay: 0,\r\n  //   },\r\n  // };\r\n  // console.log(props.inf.id);\r\n  return (\r\n    <div>\r\n      aa\r\n      {/* {status && <YouTube videoId={getVideo.key} opts={opts} />}\r\n      {!status && (\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/original${props.inf.item.backdrop_path}`}\r\n          width=\"100%\"\r\n          height=\"400px\"\r\n        />\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\nexport default Trailer;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,eAAe;AAEnC,MAAMC,OAAO,GAAIC,KAAK,IAAK;EACzBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,QAUM;AAEV,CAAC;AACD,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}