{"ast":null,"code":"var _jsxFileName = \"E:\\\\javascript\\\\Assignment02\\\\src\\\\hooks\\\\Trailer.js\";\nimport React, { useEffect, useState } from \"react\";\nimport YouTube from \"react-youtube\";\nconst Trailer = props => {\n  console.log(props);\n  const [status, setStatus] = useState(false);\n  const [getVideo, setGetVideo] = useState(\"\");\n  const test = async () => {\n    var _data$results;\n    console.log(props.inf.item.id);\n    console.log(props.inf.item.backdrop_path);\n    const response = await fetch(`https://api.themoviedb.org/3//movie/${props.inf.item.id}/videos?api_key=c08925b0a10a9ed2a65bf9f938d20719`);\n    const data = await response.json();\n    console.log(data);\n    let arrayFilter = data === null || data === void 0 ? void 0 : (_data$results = data.results) === null || _data$results === void 0 ? void 0 : _data$results.filter(e => {\n      return e.site === \"YouTube\" && (e.type === \"Trailer\" || e.type === \"Teaser\");\n    });\n    console.log(arrayFilter);\n    if ((arrayFilter === null || arrayFilter === void 0 ? void 0 : arrayFilter.length) === 0) {\n      setStatus(false);\n    } else {\n      setGetVideo(arrayFilter[0]);\n      console.log(arrayFilter);\n      setStatus(true);\n    }\n  };\n  useEffect(() => {\n    test();\n  }, [props]);\n  console.log(getVideo);\n  const opts = {\n    height: \"400\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 0\n    }\n  };\n  // console.log(props.inf.id);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, status && /*#__PURE__*/React.createElement(YouTube, {\n    videoId: getVideo.key,\n    opts: opts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 18\n    }\n  }), !status && /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://image.tmdb.org/t/p/original${props.inf.item.backdrop_path}`,\n    width: \"100%\",\n    height: \"400px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }));\n};\nexport default Trailer;","map":{"version":3,"names":["React","useEffect","useState","YouTube","Trailer","props","console","log","status","setStatus","getVideo","setGetVideo","test","inf","item","id","backdrop_path","response","fetch","data","json","arrayFilter","results","filter","e","site","type","length","opts","height","width","playerVars","autoplay","key"],"sources":["E:/javascript/Assignment02/src/hooks/Trailer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nconst Trailer = (props) => {\r\n  console.log(props);\r\n  const [status, setStatus] = useState(false);\r\n  const [getVideo, setGetVideo] = useState(\"\");\r\n\r\n  const test = async () => {\r\n    console.log(props.inf.item.id);\r\n    console.log(props.inf.item.backdrop_path);\r\n\r\n    const response = await fetch(\r\n      `https://api.themoviedb.org/3//movie/${props.inf.item.id}/videos?api_key=c08925b0a10a9ed2a65bf9f938d20719`\r\n    );\r\n    const data = await response.json();\r\n\r\n    console.log(data);\r\n\r\n    let arrayFilter = data?.results?.filter((e) => {\r\n      return (\r\n        e.site === \"YouTube\" && (e.type === \"Trailer\" || e.type === \"Teaser\")\r\n      );\r\n    });\r\n\r\n    console.log(arrayFilter);\r\n\r\n    if (arrayFilter?.length === 0) {\r\n      setStatus(false);\r\n    } else {\r\n      setGetVideo(arrayFilter[0]);\r\n      console.log(arrayFilter);\r\n      setStatus(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    test();\r\n  }, [props]);\r\n\r\n  console.log(getVideo);\r\n  const opts = {\r\n    height: \"400\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n  // console.log(props.inf.id);\r\n  return (\r\n    <div>\r\n      {status && <YouTube videoId={getVideo.key} opts={opts} />}\r\n      {!status && (\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/original${props.inf.item.backdrop_path}`}\r\n          width=\"100%\"\r\n          height=\"400px\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Trailer;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,eAAe;AAEnC,MAAMC,OAAO,GAAIC,KAAK,IAAK;EACzBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,MAAM,CAACG,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,IAAI,GAAG,YAAY;IAAA;IACvBN,OAAO,CAACC,GAAG,CAACF,KAAK,CAACQ,GAAG,CAACC,IAAI,CAACC,EAAE,CAAC;IAC9BT,OAAO,CAACC,GAAG,CAACF,KAAK,CAACQ,GAAG,CAACC,IAAI,CAACE,aAAa,CAAC;IAEzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,uCAAsCb,KAAK,CAACQ,GAAG,CAACC,IAAI,CAACC,EAAG,kDAAiD,CAC3G;IACD,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAElCd,OAAO,CAACC,GAAG,CAACY,IAAI,CAAC;IAEjB,IAAIE,WAAW,GAAGF,IAAI,aAAJA,IAAI,wCAAJA,IAAI,CAAEG,OAAO,kDAAb,cAAeC,MAAM,CAAEC,CAAC,IAAK;MAC7C,OACEA,CAAC,CAACC,IAAI,KAAK,SAAS,KAAKD,CAAC,CAACE,IAAI,KAAK,SAAS,IAAIF,CAAC,CAACE,IAAI,KAAK,QAAQ,CAAC;IAEzE,CAAC,CAAC;IAEFpB,OAAO,CAACC,GAAG,CAACc,WAAW,CAAC;IAExB,IAAI,CAAAA,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEM,MAAM,MAAK,CAAC,EAAE;MAC7BlB,SAAS,CAAC,KAAK,CAAC;IAClB,CAAC,MAAM;MACLE,WAAW,CAACU,WAAW,CAAC,CAAC,CAAC,CAAC;MAC3Bf,OAAO,CAACC,GAAG,CAACc,WAAW,CAAC;MACxBZ,SAAS,CAAC,IAAI,CAAC;IACjB;EACF,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdW,IAAI,EAAE;EACR,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEXC,OAAO,CAACC,GAAG,CAACG,QAAQ,CAAC;EACrB,MAAMkB,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACVC,QAAQ,EAAE;IACZ;EACF,CAAC;EACD;EACA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGxB,MAAM,iBAAI,oBAAC,OAAO;IAAC,OAAO,EAAEE,QAAQ,CAACuB,GAAI;IAAC,IAAI,EAAEL,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACxD,CAACpB,MAAM,iBACN;IACE,GAAG,EAAG,sCAAqCH,KAAK,CAACQ,GAAG,CAACC,IAAI,CAACE,aAAc,EAAE;IAC1E,KAAK,EAAC,MAAM;IACZ,MAAM,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAEjB,CACG;AAEV,CAAC;AACD,eAAeZ,OAAO"},"metadata":{},"sourceType":"module"}